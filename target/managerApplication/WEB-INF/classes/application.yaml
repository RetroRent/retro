spring:
  # :::::::::::::::::::::::::::::::::::::::::::::
  # VIEW RESOLVER
  # :::::::::::::::::::::::::::::::::::::::::::::

  mvc.view.prefix: /WEB-INF/jsp/
  mvc.view.suffix: .jsp

  messages:
    encoding: UTF-8

  ## MULTIPART (MultipartProperties)
  # Enable multipart uploads
  servlet :
    multipart :
      enabled : true
      file-size-threshold : 2KB
      max-file-size: 200MB
      max-request-size: 215MB

  ## File Storage Properties
  # All files uploaded through the REST API will be stored in this directory
  file :
    uploadDir: C:\LiorCode\ItemsPhoto

  # Database
  datasource:
    driverClassName : com.mysql.jdbc.Driver
    url : jdbc:mysql://127.0.0.1:3306/retrorent?allowPublicKeyRetrieval:true&useSSL:false
    username :  root
    password : hd$s@!st$d3gS

  mail:
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 10000
          timeout: 10000
          writetimeout: 10000
          starttls:
            enable: true
    password: Rr1234!@#$
    username: retrorent4all@gmail.com
    port: 587
    host: smtp.gmail.com

  jpa:
    show-sql : true
    hibernate:
      ddl-auto : update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect : org.hibernate.dialect.MySQL5Dialect
        show_sql: true
        hbm2ddl.auto: update
        entitymanager.packagesToScan: com.retro_rent

  #hibernate.hbm2ddl.auto: update

  #
  # initDB
  db.category.type : Cars,AC,Cobra-Cars,Alfa Romeo,GTV2000-Cars,Alfa Romeo,Spider,Duetto-Cars,Aston Martin,DB5-Cars,Aston Martin,DB6-Cars,Aston Martin,DB4-Cars,Aston Martin,DB5-Cars,BMW,M1-Cars,BMW,CSL-Cars,BMW,M6-Cars,BMW,507-Cars,Buick,Senchuri-Cars,Cadillac,Phaeton 5859-Cars,Cadillac,Eldorado Biarritz-Cars,Cadillac,DeVille-Cars,Chevrolet,Fleetline-Cars,Chevrolet,Corvette-Cars,Chevrolet,Bel Air Hardtop-Cars,Chevrolet,Camaro-Cars,Corvette,Sting Ray-Cars,Datsun,240Z-Cars,DeLorean,DMC12-Cars,Dodge,Charger383-Cars,Dodge,Charger-Cars,Dodge,Viper-Cars,Ferrari,250GTE-Cars,Ferrari,F40-Cars,Ferrari,Testarossa-Cars,Ferrari,F50-Cars,Ferrari,275-Cars,Ferrari Dino,246GT-Cars,Ford,Mustang-Cars,Ford,Eifel Cabrio Limousine-Cars,Ford,Thunderbird-Cars,Hudson,Hornet-Cars,Imperial,Crown Convertible-Cars,Jaguar,XJ6-Cars,Jaguar,240-Cars,Jaguar,A Type-Cars,Jaguar,E Type-Cars,Jaguar,XJS-Cars,Lamborghini,Miura-Cars,Lincoln,Continental-Cars,Lotus,Esprit-Cars,Maserati,Ghibli4.7-Cars,Maserati,3500GT-Cars,Mercedes Benz,300SL Gullwing-Cars,Mercedes Benz,540K-Cars,Mercedes Benz,300SL-Cars,Mercury,Cougar-Cars,MG,MGA-Cars,Mustang,Boss429-Cars,Nissan,FairladyZ-Cars,Porsche,365-Cars,Porsche,550-Cars,Porsche,924-Cars,Porsche,928-Cars,Porsche,944-Cars,Porsche,959-Cars,Riley,Nine Marlin-Cars,Shelby,427 Cobra-Cars,Toyota,2000GT-Cars,Volvo,P1800
  #db.experiment.pelletPertubation : None,ommisions,Taste
  #db.experiment.events : grab,lift,atmouth,lick

  app:
    auth:
      tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
      tokenExpirationMsec: 864000000
    auth2:
      authorizedRedirectUris: https://retrorent.xyz:3000/oauth2/redirect

  security:
     oauth2:
       client:
         registration:
           google:
             clientId: 661384729116-5qq9nsb40bj4i46cn963a0spm6sqe5n3.apps.googleusercontent.com
             clientSecret: -_0O0sq44zQI4kVvJBAsP3jN
             redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
             scope:
               - email
               - profile
           facebook:
             clientId: 753214071774057
             clientSecret: f62a9e42384919b1ca73ff6268497a3b
             redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
             scope:
               - email
               - public_profile
         provider:
           facebook:
             authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
             tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
             userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)


  queries:
    users-query: select email, password from user where email=?
    roles-query: select u.email, r.role from user u inner join user_role ur on(u.user_id:ur.user_id) inner join role r on(ur.role_id:r.role_id) where u.email=?



  logging:
    level:
      root: WARN
      org:
        springframework:
          security: DEBUG
          web: ERROR
        hibernate: WARN
        apache.commons.dbcp2: WARN
    file : retro_rent.log
    pattern.file: D%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{15} - %msg%n

  server:
    error:
      whitelabel:
        enabled: false


server:
  #port : 8080
  server.port: 8443
  server.ssl.key-store: keystore.p12
  server.ssl.key-store-password: Aa123456
  server.ssl.keyStoreType: PKCS12
  server.ssl.keyAlias: tomcat


client.redirect.uri: http://localhost:3000